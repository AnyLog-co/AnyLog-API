[general] 
# Type of node AnyLog should run
#   master - a "notary" system between other nodes in the network via either a public or private blockchain
#   master - nodes containing generated by sensors. these can be either physical devices (ex. cars) or remote cloud
#   publisher - nodes that simply generate data and send them to master nodes
#   query - nodes dedicated to query and BI activity
node_type=publisher 

# When setting up a node, declare the name of the node. While "node_type" declare which process in `init` AnyLog-Network/anylog_demo_scripts/ to run. 
node_name=anylog-test-publisher 

# The name of the company correlated with the cluster
company_name=AnyLog

# Machine location - coordinates location is accessible via Grafana Map visualization
#location='1.2897,103.8501'

[networking] 
# TCP IP:Port from which the master node sends/receives messages
master_node=10.0.0.25:2548

# TCP port for node used to communicate with other nodes in the network. Please make sure the port is open and avilable
anylog_tcp_port=7848

# REST port for node used to communicate with other nodes in the network. Please make sure the port is open and avilable
anylog_rest_port=7849

[database] 
# Type of database to be used by the AnyLog node
#    PSQL 
#    SQLite 
db_type=sqlite
   
# Database credentials -- ${db_user}@{db_ip}:${db_user_password}
db_user=anylog@127.0.0.1:anylog
	
# Database access port
db_port=5432

[mqtt]
# Run an MQTT client as part of the node (Publisher & Operator only) 
# URL: https://github.com/AnyLog-co/documentation/blob/master/mqtt.md
enable_mqtt=false

# From  MQTT pull raw data that's not within topic
enable_other_mqtt=false

# MQTT Connection Info (user@broker:password)
#mqtt_conn_info=mqwdtklv@driver.cloudmqtt.com:uRimssLO4dIo

# Port for MQTT 
#mqtt_port=18975

# Broker log message 
#mqtt_log=false

# mqtt topic name to get data from 
#mqtt_topic_name=test

# mqtt topic for database
#mqtt_topic_dbms="bring [metadata][company]"

# mqtt topic for table 
#mqtt_topic_table="bring [metadata][machine_name]"

# mqtt topic for timestamp column 
#mqtt_column_timestamp="bring [ts]"

#mqtt_column_value_type=int

# mqtt topic for value columns 
#mqtt_column_value="bring [value]"


